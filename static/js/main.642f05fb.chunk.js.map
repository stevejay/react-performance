{"version":3,"sources":["shared/styled/styled.ts","shared/styled/use-theme.ts","shared/styled/should-forward-prop.ts","shared/styled/variants.ts","shared/box/flex-grow-style.ts","shared/box/flex-shrink-style.ts","shared/box/box.ts","shared/button/content-wrap.ts","shared/icons/size.ts","shared/icons/create-icon.ts","shared/icons/icons.ts","shared/button/css-animation-loader.tsx","shared/button/spring-animation-loader.tsx","shared/button/styled-button.ts","shared/button/button.tsx","shared/center/center.tsx","shared/mixins/focus-ring.ts","shared/checkbox/checkbox.tsx","shared/cluster/cluster.tsx","shared/dom-utils/force-reflow.ts","shared/heading/heading.ts","shared/more-menu/more-menu.tsx","shared/portal/portal.tsx","shared/modal/modal-backdrop.tsx","shared/use-document-event-listener/use-document-event-iistener.ts","shared/use-aria-hidden/use-aria-hidden.ts","shared/use-body-scroll-lock/use-body-scroll-lock.ts","shared/use-merged-refs/use-merged-refs.ts","shared/modal/modal-content.tsx","shared/stack/spacing.ts","shared/modal/modal.tsx","shared/stack/stack.ts","shared/visually-hidden/visually-hidden.ts","shared/skip-link/skip-link-button.ts","shared/skip-link/skip-links-context.tsx","shared/skip-link/use-refs-map.ts","shared/skip-link/skip-link.tsx","shared/dom-utils/make-focusable.ts","shared/page/index.ts","shared/page/page-box.tsx","shared/page/page-header.tsx","shared/skip-link/use-skip-link-target.ts","shared/paragraph/paragraph.ts","shared/radio-button/radio-button-group.tsx","shared/radio-button/radio-button.tsx","shared/radio-button/index.ts","shared/switcher/switcher.tsx","state/animation-store.ts","shared/typescript/as-enum.ts","shared/use-delayed-link-click-handler/use-delayed-link-click-handler.ts","shared/use-scroll-to-top/use-scroll-to-top.ts","header/modal-sidebar-content.tsx","header/modal-sidebar.tsx","header/nav-link.tsx","header/nav-link-list.tsx","header/header.tsx","modules/picture-element/hero-image/hero-image-wrap.ts","modules/picture-element/hero-image/inner-image.tsx","modules/picture-element/hero-image/hero-image.tsx","modules/picture-element/hero-image/constants.ts","modules/picture-element/create-paragraphs.tsx","modules/refs-experiments/example-context.tsx","modules/refs-experiments/example-context-consumer.tsx","shared/get-random-color/get-random-color.ts","modules/home/animation-duration-field.tsx","modules/home/animation-library-field.tsx","modules/home/page-weight-field.tsx","modules/home/should-delay-navigation-field.tsx","modules/aria-live/aria-live-page.tsx","global-style.tsx","theme.ts","app.tsx","modules/home/home-page.tsx","modules/picture-element/picture-element-page.tsx","modules/compositing-animation/compositing-animation-page.tsx","shared/dom-utils/block-dom-updates.ts","modules/refs-experiments/refs-experiments-page.tsx","service-worker.js","index.tsx"],"names":["typedStyled","styled","useTheme","useThemeEmotion","disallowedProps","color","display","fontSize","fontWeight","spacing","shouldForwardProp","prop","isPropValid","buttonVariants","variant","key","default","buttonSizes","flexGrow","style","cssProperty","flexShrink","Box","minWidth","backgrounds","borders","flexboxes","layout","positioning","shadows","space","basics","ContentWrap","span","props","isLoading","size","themeGet","getFontSize","createIcon","component","ArrowRight","createSystemComponent","React","ArrowRightIcon","Menu","MenuIcon","Spinner","SpinnerIcon","Tick","TickIcon","More","MoreIcon","Icons","ChevronDown","ChevronDownIcon","spinKeyframes","keyframes","LoaderWrap","theme","timings","spinner","CSSAnimationLoader","SpringAnimationLoader","duration","animationProps","useSpring","from","transform","to","next","a","async","reset","config","StyledButton","button","th","lineHeight","radius","borderWidth","typography","Button","forwardRef","ref","children","disabled","useCSSAnimation","onClick","rest","data-loading","Boolean","div","maxWidth","px","intrinsic","css","centeredText","focusRing","colors","focus","StyledWrap","StyledInput","input","StyledLabel","label","Checkbox","name","checked","onChange","inputId","useId","type","id","htmlFor","StyledOuterWrap","StyledInnerWrap","alignItems","justifyContent","Cluster","forceReflow","node","scrollTop","Heading","font","as","ul","li","Portal","nodeRef","useRef","current","document","createElement","setAttribute","body","appendChild","useImperativeHandle","isHidden","getAttribute","useEffect","removeChild","ReactDOM","createPortal","StyledBackdrop","zIndex","ModalBackdrop","isOpen","ModalBackdropInner","eventName","listener","onRequestClose","focusLockProps","portalRef","backdropRef","ariaHiddenRef","useState","element","setElement","undo","hideOthers","useAriaHidden","bodyScrollRef","disableBodyScroll","reserveScrollBarGap","enableBodyScroll","useBodyScrollLock","mergedRefs","refs","mergedRef","useCallback","value","forEach","useMergedRefs","handleKeyDown","event","addEventListener","removeEventListener","handlePointerEvent","stopPropagation","backdrop","length","contains","target","Children","only","autoFocus","returnFocus","onTouchStart","undefined","shadow","allowFocusOnContentBox","ariaLabel","ariaLabelledby","log","error","role","aria-modal","aria-label","aria-labelledby","tabIndex","getSpace","Stack","VisuallyHidden","isFocusable","SkipLinkButton","SkipLinksContext","createContext","addRef","removeRef","getRef","SkipLinksProvider","refsMap","refsMapValue","map","api","useRefsMap","Provider","SkipLink","targetId","skipLinks","useContext","handleClick","targetRef","tabbable","eventListener","removeAttribute","makeFocusable","scrollIntoView","Page","m","xs","sm","title","headingRef","useSkipLinkTarget","pb","borderBottom","borderColor","Paragraph","p","RadioButtonGroupContext","RadioButtonExport","selectedValue","groupName","Group","headingId","groupNameId","md","AnimationLibrary","PageWeight","AnimationDuration","threshold","limit","Switcher","count","asEnum","e","k","Object","values","indexOf","Error","join","useDelayedLinkClickHandler","delayMs","history","useHistory","preventDefault","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","global","setTimeout","push","useScrollToTop","location","useLocation","window","scrollTo","pathname","AnimationStore","Store","animationDuration","Fast","animationLibrary","ReactTransitionGroup","pageWeight","Heavy","shouldDelayNavigation","selectAnimationDurationMs","store","nav","ModalSidebarContent","backdropTransitionStyles","entering","opacity","entered","exiting","exited","contentTransitionStyles","ModalSidebar","OPACITY_TRANSITION","TRANSFORM_TRANSITION","TransitionGroup","appear","Transition","timeout","onEnter","mountOnEnter","unmountOnExit","animationState","willChange","transition","StyledLink","NavLink","useStoreState","s","StyledList","NavLinkList","pages","page","path","Header","sidebarIsOpen","setSidebarIsOpen","handleClose","backgroundColor","boxShadow","aria-haspopup","aria-expanded","aria-controls","HeroImageWrap","gray100","up","StyledImage","img","isLoaded","contentFade","InnerImage","setIsLoaded","onLoad","createLandscapeSrcSet","imagePath","extension","createPortraitSrcSet","HeroImage","landscapeImagePath","portraitImagePath","altText","themeObj","landscapeMediaQuery","breakpoints","media","srcSet","sizes","src","alt","lorem","LoremIpsum","sentencesPerParagraph","max","min","ExampleContext","someProperty","ExampleContextProvider","useStableContextValue","stableValue","ExampleContextConsumer","memo","i","Math","floor","random","getRandomColor","readableColor","AnimationDurationField","keys","update","getOptionLabel","ReactSpring","AnimationLibraryField","PageWeightField","ShouldDelayNavigationField","LIVE_TEXT","GlobalStyle","styles","emotionNormalize","fonts","lineHeights","baseTheme","transformers","rpxTransformers","primary900","primary500","primary100","contrastHot500","contrastCool500","transparent","black","gray900","gray600","gray500","white","link","fontSizes","fontWeights","light","normal","bold","lg","xl","borderWidths","none","hair","radii","circle","xxl","copy","instant","modalAnimation","zIndices","header","sidebar","modalDialog","borderStyles","buttons","primary","outline","outlineInverted","medium","small","icon","PAGES","maxParagraphs","process","paragraphs","generateParagraphs","createParagraphs","setIsLoading","milliseconds","start","Date","now","blockDOMUpdates","counter","setCounter","setUseStableContextValue","state","liveTextIndex","setLiveTextIndex","ariaLiveRegionRef","ariaAtomic","setAriaAtomic","index","aria-live","aria-atomic","flexDirection","borderRadius","hostname","match","render","minHeight","PageComponent","exact","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.642f05fb.chunk.js","sourcesContent":["import styled, { CreateStyled } from \"@emotion/styled\";\nimport { DefaultTheme } from \"app-theme\";\n\nconst typedStyled = styled as CreateStyled<DefaultTheme>;\n\nexport type AsProps = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  as?: React.ComponentType<any> | keyof JSX.IntrinsicElements;\n};\n\nexport { typedStyled as styled };\n","import { useTheme as useThemeEmotion } from \"emotion-theming\";\nimport { DefaultTheme } from \"app-theme\";\n\nconst useTheme = () => useThemeEmotion<DefaultTheme>();\n\nexport { useTheme };\n","import isPropValid from \"@emotion/is-prop-valid\";\n\nconst disallowedProps: { [key: string]: boolean } = {\n  color: true,\n  display: true,\n  fontSize: true,\n  fontWeight: true,\n  spacing: true\n};\n\nconst shouldForwardProp = {\n  shouldForwardProp: (prop: string) =>\n    isPropValid(prop) && prop !== \"color\" && !disallowedProps[prop]\n};\n\nexport { shouldForwardProp };\n","import { variant } from \"@xstyled/system\";\n\nconst buttonVariants = variant({\n  key: \"buttons\",\n  prop: \"variant\",\n  default: \"primary\"\n});\n\nconst buttonSizes = variant({\n  key: \"buttonSizes\",\n  prop: \"size\",\n  default: \"medium\"\n});\n\nexport { buttonVariants, buttonSizes };\n","import { style, ResponsiveValue } from \"@xstyled/system\";\n\nconst flexGrow = style({\n  prop: \"flexGrow\",\n  cssProperty: \"flexGrow\"\n});\n\nexport type FlexGrowProps = {\n  flexGrow?: ResponsiveValue<import(\"csstype\").GlobalsNumber>;\n};\n\nexport { flexGrow };\n","import { style, ResponsiveValue } from \"@xstyled/system\";\n\nconst flexShrink = style({\n  prop: \"flexShrink\",\n  cssProperty: \"flexShrink\"\n});\n\nexport type FlexShrinkProps = {\n  flexShrink?: ResponsiveValue<import(\"csstype\").GlobalsNumber>;\n};\n\nexport { flexShrink };\n","import {\n  backgrounds,\n  basics,\n  borders,\n  color,\n  flexboxes,\n  layout,\n  positioning,\n  shadows,\n  space,\n  BackgroundsProps,\n  BasicsProps,\n  BordersProps,\n  ColorProps,\n  FlexboxesProps,\n  LayoutProps,\n  PositioningProps,\n  ShadowsProps,\n  SpaceProps\n} from \"@xstyled/system\";\nimport { styled, AsProps, shouldForwardProp } from \"src/shared/styled\";\nimport { flexGrow, FlexGrowProps } from \"./flex-grow-style\";\nimport { flexShrink, FlexShrinkProps } from \"./flex-shrink-style\";\n\ntype Props = BackgroundsProps &\n  BasicsProps &\n  BordersProps &\n  ColorProps &\n  FlexboxesProps &\n  FlexGrowProps &\n  FlexShrinkProps &\n  LayoutProps &\n  PositioningProps &\n  ShadowsProps &\n  SpaceProps &\n  AsProps;\n\nconst Box = styled(\"div\", shouldForwardProp)<Props>(\n  {\n    minWidth: 0,\n    display: \"flex\"\n  },\n  backgrounds,\n  borders,\n  color,\n  flexboxes,\n  flexGrow,\n  flexShrink,\n  layout,\n  positioning,\n  shadows,\n  space,\n  basics\n);\n\nexport { Box };\n","import { styled } from \"src/shared/styled\";\n\ntype Props = {\n  isLoading: boolean;\n};\n\nconst ContentWrap = styled.span<Props>`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  opacity: ${props => (props.isLoading ? 0 : 1)};\n`;\n\nexport { ContentWrap };\n","import { FontSizeProps, style, getFontSize } from \"@xstyled/system\";\n\nconst size = style({\n  prop: \"size\",\n  cssProperty: [\"width\", \"height\"],\n  themeGet: getFontSize\n});\n\nexport type SizeProps = {\n  size: FontSizeProps[\"fontSize\"];\n};\n\nexport { size };\n","import {\n  color,\n  space,\n  ColorProps,\n  SpaceProps,\n  SizeProps\n} from \"@xstyled/system\";\nimport { styled } from \"src/shared/styled\";\nimport { size } from \"./size\";\n\ntype Props = ColorProps & SpaceProps & SizeProps;\n\nconst createIcon = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  component: import(\"react\").ComponentType<any>\n) =>\n  styled(component)<Props>`\n    display: block;\n    flex-shrink: 0;\n    ${size}\n    ${color}\n    ${space}\n  `;\n\nexport { createIcon };\n","import React from \"react\";\nimport { createSystemComponent } from \"@xstyled/system\";\nimport {\n  FiArrowRight as ArrowRightIcon,\n  FiMenu as MenuIcon,\n  FiLoader as SpinnerIcon,\n  FiCheck as TickIcon,\n  FiMoreVertical as MoreIcon,\n  FiChevronDown as ChevronDownIcon\n} from \"react-icons/fi\";\nimport { createIcon } from \"./create-icon\";\n\nconst SystemArrowRightIcon = createSystemComponent(React, ArrowRightIcon);\nconst ArrowRight = createIcon(SystemArrowRightIcon);\n\nconst SystemMenuIcon = createSystemComponent(React, MenuIcon);\nconst Menu = createIcon(SystemMenuIcon);\n\nconst SystemSpinnerIcon = createSystemComponent(React, SpinnerIcon);\nconst Spinner = createIcon(SystemSpinnerIcon);\n\nconst SystemTickIcon = createSystemComponent(React, TickIcon);\nconst Tick = createIcon(SystemTickIcon);\n\nconst SystemMoreIcon = createSystemComponent(React, MoreIcon);\nconst More = createIcon(SystemMoreIcon);\n\nconst SystemChevronDownIcon = createSystemComponent(React, ChevronDownIcon);\nconst ChevronDown = createIcon(SystemChevronDownIcon);\n\nconst Icons = {\n  ArrowRight,\n  ChevronDown,\n  Menu,\n  More,\n  Spinner,\n  Tick\n};\n\nexport { Icons };\n","import React from \"react\";\nimport { keyframes } from \"@emotion/core\";\nimport { Icons } from \"src/shared/icons\";\nimport { styled } from \"src/shared/styled\";\n\nconst spinKeyframes = keyframes`\n  100% {\n    transform:rotate(360deg);\n  }\n`;\n\nconst LoaderWrap = styled.span`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n\n  & svg {\n    animation: ${props => props.theme.timings.spinner}ms ${spinKeyframes} linear\n      infinite;\n  }\n`;\n\ntype Props = {\n  isLoading: boolean;\n  size: \"small\" | \"medium\" | \"icon\" | undefined;\n};\n\nconst CSSAnimationLoader: React.FC<Props> = ({ size, isLoading }) =>\n  isLoading ? (\n    <LoaderWrap>\n      <Icons.Spinner size={size === \"small\" ? 4 : 5} />\n    </LoaderWrap>\n  ) : null;\n\nexport { CSSAnimationLoader };\n","import React from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport { Icons } from \"src/shared/icons\";\nimport { styled, useTheme } from \"src/shared/styled\";\n\nconst LoaderWrap = styled.span`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  line-height: 0;\n`;\n\ntype Props = {\n  isLoading: boolean;\n};\n\nconst SpringAnimationLoader: React.FC<Props> = ({ isLoading }) => {\n  const duration = useTheme().timings.spinner;\n\n  const animationProps = useSpring({\n    from: { transform: \"rotate(0deg)\" },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    to: async (next: any) => {\n      while (isLoading) {\n        await next({ transform: \"rotate(360deg)\" });\n        await next({ reset: true });\n      }\n    },\n    config: { duration }\n  });\n\n  if (!isLoading) {\n    return null;\n  }\n\n  return (\n    <LoaderWrap>\n      <animated.span style={animationProps}>\n        <Icons.Spinner size={5} />\n      </animated.span>\n    </LoaderWrap>\n  );\n};\n\nexport { SpringAnimationLoader };\n","import { layout, typography, TypographyProps, th } from \"@xstyled/system\";\nimport { styled, buttonSizes, buttonVariants } from \"src/shared/styled\";\nimport { DefaultTheme } from \"app-theme\";\n\ntype StyledButtonProps = {\n  variant?: keyof DefaultTheme[\"buttons\"];\n  size?: keyof DefaultTheme[\"buttonSizes\"];\n} & TypographyProps;\n\nconst StyledButton = styled.button<StyledButtonProps>`\n    appearance: none;\n    background: none repeat scroll 0 0 transparent;\n    border-spacing: 0;\n    padding: 0;\n    margin: 0;\n    cursor: pointer;\n    position: relative;\n    font-weight: ${th.fontWeight(\"normal\")};\n    line-height: ${th.lineHeight(\"md\")};\n    border-radius: ${th.radius(\"xs\")};\n    border-width: ${th.borderWidth(\"hair\")};\n    border-style: solid;\n    ${buttonVariants}\n    ${buttonSizes}\n    ${typography}\n    ${layout}\n\n    &:disabled {\n        opacity: 0.65;\n    }\n\n    &:disabled, &[data-loading=\"true\"] {\n        cursor: not-allowed;\n    }\n\n    &:active:not(:disabled):not([data-loading=\"true\"]) {\n        filter: contrast(1.4);\n    }\n`;\n\nexport { StyledButton };\n","import React from \"react\";\nimport { ContentWrap } from \"./content-wrap\";\nimport { CSSAnimationLoader } from \"./css-animation-loader\";\nimport { SpringAnimationLoader } from \"./spring-animation-loader\";\nimport { StyledButton } from \"./styled-button\";\n\ntype Props = React.ComponentProps<typeof StyledButton> & {\n  disabled?: boolean;\n  isLoading?: boolean;\n  useCSSAnimation: boolean;\n  onClick?: () => void;\n};\n\nconst Button = React.forwardRef<HTMLButtonElement, Props>(\n  (\n    { children, disabled, isLoading, useCSSAnimation, size, onClick, ...rest },\n    ref\n  ) => (\n    <StyledButton\n      {...rest}\n      ref={ref}\n      size={size}\n      disabled={disabled || !onClick}\n      data-loading={isLoading}\n      onClick={onClick}\n    >\n      <ContentWrap isLoading={Boolean(isLoading)}>{children}</ContentWrap>\n      {useCSSAnimation && (\n        <CSSAnimationLoader isLoading={Boolean(isLoading)} size={size} />\n      )}\n      {!useCSSAnimation && (\n        <SpringAnimationLoader isLoading={Boolean(isLoading)} />\n      )}\n    </StyledButton>\n  )\n);\n\nexport { Button };\n","import { css } from \"@emotion/core\";\nimport { maxWidth, px, MaxWidthProps, PaddingXProps } from \"@xstyled/system\";\nimport { styled } from \"src/shared/styled\";\n\ntype Props = MaxWidthProps &\n  PaddingXProps & {\n    // Shrink the width to fit the content:\n    intrinsic?: boolean;\n    // Adds the `text-align: center` rule:\n    centeredText?: boolean;\n  };\n\nconst Center = styled.div<Props>`\n    box-sizing: content-box;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    ${maxWidth}\n    ${px}\n\n    ${({ intrinsic }) =>\n      intrinsic &&\n      css`\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n      `}\n\n    ${({ centeredText }) =>\n      centeredText &&\n      css`\n        text-align: center;\n      `}\n`;\n\nexport { Center };\n","import { css } from \"@emotion/core\";\nimport { DefaultTheme } from \"app-theme\";\n\nconst focusRing = (props: { theme: DefaultTheme }) => css`\n  box-shadow: 0 0 0 4px ${props.theme.colors.focus};\n`;\n\nexport { focusRing };\n","import React from \"react\";\nimport { th } from \"@xstyled/system\";\nimport { useId } from \"react-use-id-hook\";\nimport { focusRing } from \"src/shared/mixins\";\nimport { styled } from \"src/shared/styled\";\nimport { Icons } from \"src/shared/icons\";\n\ntype Props = {\n  label: string;\n  name: string;\n  checked: boolean;\n  disabled?: boolean;\n  onChange: () => void;\n};\n\nconst StyledWrap = styled.div`\n  position: relative;\n`;\n\nconst StyledInput = styled.input`\n  position: absolute;\n  appearance: none;\n  background: none;\n  opacity: 1e-6;\n  z-index: 2;\n  margin: 0;\n  padding: 0;\n  border: 1px solid;\n  width: 1.125em;\n  height: 1.125em;\n  font-size: 1rem;\n  left: 0.125em;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n\n  &[disabled] {\n    cursor: not-allowed;\n  }\n`;\n\n/* ::before is the outer border */\nconst StyledLabel = styled.label`\n  display: inline-block;\n  padding-left: 2em;\n\n  input:not([disabled]) + & {\n    cursor: pointer;\n  }\n\n  input[disabled] + & {\n    cursor: not-allowed;\n  }\n\n  &::before,\n  input + & > svg {\n    box-sizing: border-box;\n    position: absolute;\n    width: 1.125em;\n    height: 1.125em;\n    left: 0.125em;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  &::before {\n    content: \" \";\n    border-radius: 2px;\n    border: 1px solid ${th.color(\"gray900\")};\n    box-shadow: 0 0 0 1px ${th.color(\"gray500\")};\n  }\n\n  input:checked:not([disabled]) + &::before {\n    border-color: transparent;\n    background-color: ${th.color(\"primary900\")};\n    box-shadow: 0 0 0 1px ${th.color(\"primary900\")};\n  }\n\n  input:focus:not([disabled]) + &::before {\n    border-color: transparent;\n    ${focusRing}\n  }\n\n  input[disabled] + & {\n    opacity: 0.5;\n  }\n\n  input[disabled] + &::before {\n    border-color: ${th.color(\"gray500\")};\n  }\n\n  input + & > svg {\n    visibility: hidden;\n    color: ${th.color(\"white\")};\n  }\n\n  input:checked + & > svg {\n    visibility: visible;\n  }\n\n  input[disabled]:checked + & > svg {\n    color: ${th.color(\"gray500\")};\n  }\n`;\n\nconst Checkbox: React.FC<Props> = ({\n  label,\n  name,\n  checked,\n  disabled,\n  onChange\n}) => {\n  const inputId = useId();\n\n  return (\n    <StyledWrap>\n      <StyledInput\n        type=\"checkbox\"\n        id={inputId}\n        name={name}\n        checked={checked}\n        disabled={disabled}\n        onChange={onChange}\n      />\n      <StyledLabel htmlFor={inputId}>\n        <Icons.Tick size={2} />\n        {label}\n      </StyledLabel>\n    </StyledWrap>\n  );\n};\n\nexport { Checkbox };\n","import React from \"react\";\nimport {\n  alignItems,\n  justifyContent,\n  th,\n  AlignItemsProps,\n  JustifyContentProps\n} from \"@xstyled/system\";\nimport { styled, shouldForwardProp } from \"src/shared/styled\";\n\ntype Props = AlignItemsProps &\n  JustifyContentProps & {\n    spacing: string | number;\n  };\n\nconst StyledOuterWrap = styled.div`\n  display: block;\n`;\n\nconst StyledInnerWrap = styled(\"div\", shouldForwardProp)<Required<Props>>`\n  ${alignItems}\n  ${justifyContent}\n  display: flex;\n  flex-wrap: wrap;\n  margin: calc((${props => th.space(props.spacing)} / 2) * -1);\n\n  && > * {\n    margin: calc(${props => th.space(props.spacing)} / 2);\n  }\n`;\n\nconst Cluster: React.FC<Props> = ({\n  alignItems = \"center\",\n  justifyContent = \"flex-start\",\n  spacing,\n  children\n}) => (\n  <StyledOuterWrap>\n    <StyledInnerWrap\n      alignItems={alignItems}\n      justifyContent={justifyContent}\n      spacing={spacing}\n    >\n      {children}\n    </StyledInnerWrap>\n  </StyledOuterWrap>\n);\n\nexport { Cluster };\n","const forceReflow = (node: HTMLElement) => node && node.scrollTop;\nexport { forceReflow };\n","import {\n  borders,\n  color,\n  th,\n  space,\n  typography,\n  BordersProps,\n  ColorProps,\n  SpaceProps,\n  TypographyProps\n} from \"@xstyled/system\";\nimport { css } from \"@emotion/core\";\nimport { styled, AsProps, shouldForwardProp } from \"src/shared/styled\";\n\ntype Props = BordersProps & ColorProps & SpaceProps & TypographyProps & AsProps;\n\nconst Heading = styled(\"h1\", shouldForwardProp)<Props>`\n  margin: 0;\n  padding: 0;\n  font-family: ${th.font(\"display\")};\n  font-weight: bold;\n  font-size: 2rem;\n  line-height: 1.3;\n  ${borders}\n  ${color}\n  ${space}\n  ${typography}\n  ${props =>\n    props.as === \"h2\" &&\n    css`\n      font-size: 1.5rem;\n      line-height: 1.4;\n    `}\n    ${props =>\n      props.as === \"h3\" &&\n      css`\n        font-size: 1.125rem;\n        line-height: 1.4;\n      `}\n      ${props =>\n        props.as === \"h4\" &&\n        css`\n          font-size: 1rem;\n          line-height: 1.3;\n          text-transform: uppercase;\n        `}\n        ${props =>\n          props.as === \"h5\" &&\n          css`\n            font-size: 0.875rem;\n            line-height: 1.3;\n            text-transform: uppercase;\n          `}\n`;\n\nexport { Heading };\n","import React from \"react\";\nimport { useSelect } from \"downshift\";\nimport { Manager, Reference, Popper, PopperProps } from \"react-popper\";\nimport { th } from \"@xstyled/system\";\nimport { Transition } from \"react-transition-group\";\nimport { DefaultTheme } from \"app-theme\";\nimport { styled, buttonSizes } from \"src/shared/styled\";\nimport { Icons } from \"src/shared/icons\";\n\nconst TRANSITION_DURATION_MS = 200;\n\nconst POPPER_MODIFIERS = {\n  keepTogether: { enabled: false },\n  arrow: { enabled: false },\n  offset: { offset: \"-25%\" }\n};\n\ntype Props = {\n  items: string[];\n  placement: PopperProps[\"placement\"];\n  size?: keyof DefaultTheme[\"buttonSizes\"];\n  onSelectedItemChange: (changes: { selectedItem?: string }) => void;\n};\n\n// TODO split these out?\n\nconst StyledWrap = styled.div`\n  position: \"relative\";\n`;\n\nconst StyledButton = styled.button`\n  border: 1px solid transparent;\n  margin: 0;\n  appearance: none;\n  background: none repeat scroll 0 0 transparent;\n  border-spacing: 0;\n  cursor: pointer;\n  ${buttonSizes}\n`;\n\nconst StyledList = styled.ul`\n  outline: none;\n  padding: 0;\n  margin: 0;\n  z-index: 1;\n  background-color: ${th.color(\"white\")};\n  border-radius: ${th.radius(3)};\n  filter: drop-shadow(0 5px 5px rgba(0, 0, 0, 0.2));\n  will-change: opacity;\n  transition: opacity ${TRANSITION_DURATION_MS}ms ease-in;\n  min-width: 100px;\n  cursor: pointer;\n  position: relative;\n`;\n\nconst StyledListItem = styled.li`\n  list-style: none;\n  margin: 0;\n  padding: 1ch;\n\n  &:first-of-type {\n    border-top-right-radius: ${th.radius(3)};\n    border-top-left-radius: ${th.radius(3)};\n  }\n\n  &:last-of-type {\n    border-bottom-right-radius: ${th.radius(3)};\n    border-bottom-left-radius: ${th.radius(3)};\n  }\n\n  &[data-highlighted=\"true\"] {\n    background-color: ${th.color(\"gray100\")};\n  }\n`;\n\nconst TRANSITION_STYLES = {\n  entering: { opacity: 1 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0 },\n  exited: { opacity: 0 },\n  unmounted: { opacity: 0 }\n} as const;\n\nconst MoreMenu: React.FC<Props> = ({\n  items,\n  placement,\n  size,\n  onSelectedItemChange\n}) => {\n  const {\n    isOpen,\n    getToggleButtonProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps\n  } = useSelect({ items, onSelectedItemChange });\n\n  return (\n    <Manager>\n      <StyledWrap>\n        <Reference>\n          {({ ref }) => (\n            <StyledButton size={size} {...getToggleButtonProps({ ref })}>\n              <Icons.More size={4} />\n            </StyledButton>\n          )}\n        </Reference>\n        <Popper\n          placement={placement}\n          modifiers={POPPER_MODIFIERS}\n          eventsEnabled={isOpen}\n        >\n          {({ ref, style }) => (\n            <Transition in={isOpen} timeout={TRANSITION_DURATION_MS}>\n              {state => (\n                <StyledList\n                  {...getMenuProps({\n                    ref,\n                    style: { ...TRANSITION_STYLES[state], ...style }\n                  })}\n                >\n                  {state !== \"exited\" &&\n                    items.map((item, index) => (\n                      <StyledListItem\n                        key={`${item}${index}`}\n                        data-highlighted={highlightedIndex === index}\n                        {...getItemProps({ item, index })}\n                      >\n                        {item}\n                      </StyledListItem>\n                    ))}\n                </StyledList>\n              )}\n            </Transition>\n          )}\n        </Popper>\n      </StyledWrap>\n    </Manager>\n  );\n};\n\nexport { MoreMenu };\n","import React, { PropsWithChildren } from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// eslint-disable-next-line import/exports-last\nexport type PortalImperativeFunctions = { isHidden: () => boolean };\n\nconst Portal = React.forwardRef<\n  PortalImperativeFunctions,\n  PropsWithChildren<{}>\n>(({ children }: PropsWithChildren<{}>, ref) => {\n  const nodeRef = React.useRef<HTMLElement>();\n\n  if (!nodeRef.current) {\n    nodeRef.current = document.createElement(\"div\");\n    nodeRef.current.setAttribute(\"data-testid\", \"portal\");\n    document.body.appendChild(nodeRef.current);\n  }\n\n  // Allow the portal DOM node to be queried for being hidden:\n  React.useImperativeHandle(ref, () => ({\n    isHidden: () =>\n      !!nodeRef.current &&\n      nodeRef.current.getAttribute(\"aria-hidden\") === \"true\"\n  }));\n\n  // Remove the portal's DOM element on unmount:\n  React.useEffect(() => {\n    return () => {\n      if (nodeRef.current) {\n        document.body.removeChild(nodeRef.current);\n      }\n    };\n  }, []);\n\n  return ReactDOM.createPortal(children, nodeRef.current);\n});\n\nexport { Portal };\n","import React from \"react\";\nimport { th } from \"@xstyled/system\";\nimport FocusLock from \"react-focus-lock\";\n// import composeRefs from \"@seznam/compose-react-refs\";\nimport { styled } from \"src/shared/styled\";\nimport { useAriaHidden } from \"src/shared/use-aria-hidden\";\nimport { useBodyScrollLock } from \"src/shared/use-body-scroll-lock\";\nimport { Portal, PortalImperativeFunctions } from \"src/shared/portal\";\nimport { useDocumentEventListener } from \"src/shared/use-document-event-listener\";\nimport { useMergedRefs } from \"src/shared/use-merged-refs\";\n\ntype Props = Readonly<{\n  isOpen: boolean;\n  onRequestClose?: () => void;\n  // Overrides for styling the modal backdrop box:\n  style?: React.CSSProperties;\n  focusLockProps?: React.ComponentProps<typeof FocusLock>;\n  children: React.ReactElement;\n}>;\n\nconst StyledBackdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  padding: ${th.space(2)};\n  margin: auto;\n  overflow-x: hidden;\n  overflow-y: auto;\n  background-color: rgba(0, 0, 0, 0.5);\n  outline: 0;\n  z-index: ${th.zIndex(\"modalDialog\")};\n  -webkit-overflow-scrolling: touch;\n`;\n\nconst ModalBackdrop: React.FC<Props> = ({ isOpen, ...props }) =>\n  isOpen ? <ModalBackdropInner {...props} /> : null;\n\nconst ModalBackdropInner: React.FC<Omit<Props, \"isOpen\">> = ({\n  onRequestClose,\n  focusLockProps,\n  children,\n  ...props\n}) => {\n  const portalRef = React.useRef<PortalImperativeFunctions>(null);\n  const backdropRef = React.useRef<HTMLDivElement>(null);\n  const ariaHiddenRef = useAriaHidden<HTMLDivElement>();\n  const bodyScrollRef = useBodyScrollLock<HTMLDivElement>();\n\n  const mergedRefs = useMergedRefs<HTMLDivElement>(\n    backdropRef,\n    ariaHiddenRef,\n    bodyScrollRef\n  );\n\n  const handleKeyDown = React.useCallback(\n    event => {\n      if (event.key === \"Escape\") {\n        // Only close this modal if it is not hidden by useAriaHidden,\n        // which means it must be the topmost modal.\n        if (portalRef.current && !portalRef.current.isHidden()) {\n          onRequestClose && onRequestClose();\n        }\n      }\n    },\n    [onRequestClose]\n  );\n\n  useDocumentEventListener(\"keydown\", handleKeyDown);\n\n  const handlePointerEvent = React.useCallback(\n    (event: React.SyntheticEvent) => {\n      // Prevents the parent modal closing if this is a nested modal:\n      event.stopPropagation();\n      const backdrop = backdropRef.current;\n\n      // Prevent a click on the modal content from closing it:\n      if (\n        backdrop &&\n        backdrop.children.length &&\n        backdrop.children[0].contains(event.target as HTMLElement)\n      ) {\n        return;\n      }\n\n      onRequestClose && onRequestClose();\n    },\n    [onRequestClose]\n  );\n\n  // Assert that there is only a single child component:\n  React.Children.only(children);\n\n  return (\n    <Portal ref={portalRef}>\n      <FocusLock autoFocus returnFocus {...focusLockProps}>\n        <StyledBackdrop\n          ref={mergedRefs}\n          //   ref={composeRefs(backdropRef, ariaHiddenRef, bodyScrollRef)}\n          onTouchStart={onRequestClose ? handlePointerEvent : undefined}\n          onClick={onRequestClose ? handlePointerEvent : undefined}\n          {...props}\n        >\n          {children}\n        </StyledBackdrop>\n      </FocusLock>\n    </Portal>\n  );\n};\n\nexport { ModalBackdrop };\n","import React from \"react\";\n\nconst useDocumentEventListener = (\n  eventName: string,\n  listener: EventListenerOrEventListenerObject\n) => {\n  React.useEffect(() => {\n    document.addEventListener(eventName, listener, true);\n    return () => document.removeEventListener(eventName, listener, true);\n  }, [eventName, listener]);\n};\n\nexport { useDocumentEventListener };\n","import React from \"react\";\nimport { hideOthers } from \"aria-hidden\";\n\n// Returns a ref that should be applied to the element which remains\n// visible to screen readers while all other page content is made invisible.\nconst useAriaHidden = <T extends HTMLElement>(): ((\n  instance: T | null\n) => void) => {\n  const [element, setElement] = React.useState<T | null>(null);\n\n  React.useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    const undo = hideOthers(element);\n    return () => undo();\n  }, [element]);\n\n  return setElement;\n};\n\nexport { useAriaHidden };\n","import React from \"react\";\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\n\n// Returns a ref that should be applied to the element which remains\n// scrollable while scrolling is locked everywhere else in the page.\nconst useBodyScrollLock = <T extends HTMLElement>(): ((\n  instance: T | null\n) => void) => {\n  const [element, setElement] = React.useState<T | null>(null);\n\n  React.useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    disableBodyScroll(element, { reserveScrollBarGap: true });\n\n    return () => {\n      enableBodyScroll(element);\n    };\n  }, [element]);\n\n  return setElement;\n};\n\nexport { useBodyScrollLock };\n","import React from \"react\";\n\n// This is a simple implementation of a merged refs hook.\n// It is best used for simple merging, i.e., when the refs\n// passed in do not change. For a more complex merge,\n// use @seznam/compose-react-refs.\n\nconst useMergedRefs = <T>(\n  ...refs: React.Ref<T>[]\n): ((instance: T | null) => void) => {\n  const mergedRef = React.useCallback((value: T | null) => {\n    refs.forEach(ref => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (ref as React.MutableRefObject<any>).current = value;\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n\n  return mergedRef;\n};\n\nexport { useMergedRefs };\n","import React from \"react\";\nimport log from \"loglevel\";\nimport { th } from \"@xstyled/system\";\nimport { css } from \"@emotion/core\";\nimport { styled } from \"src/shared/styled\";\n\ntype Props = Readonly<{\n  allowFocusOnContentBox?: boolean;\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n}>;\n\nconst StyledWrap = styled.div<Pick<Props, \"allowFocusOnContentBox\">>`\n  display: flex;\n  flex-direction: column;\n  padding: ${th.space(2)};\n  margin: auto;\n  background-color: ${th.color(\"white\")};\n  border-radius: ${th.radius(2)};\n  box-shadow: ${th.shadow(\"xl\")};\n\n  ${props =>\n    props.allowFocusOnContentBox &&\n    css`\n      outline: 0;\n    `}\n`;\n\nconst ModalContent = React.forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      allowFocusOnContentBox,\n      ariaLabel,\n      ariaLabelledby,\n      children,\n      ...props\n    }: Props,\n    ref\n  ) => {\n    if (!ariaLabel && !ariaLabelledby) {\n      log.error(\"ariaLabel or ariaLabelledby must be defined\");\n    }\n\n    return (\n      <StyledWrap\n        ref={ref}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledby}\n        tabIndex={allowFocusOnContentBox ? 0 : undefined}\n        {...props}\n      >\n        {children}\n      </StyledWrap>\n    );\n  }\n);\n\nexport { ModalContent };\n","import { MarginTopProps, style, getSpace } from \"@xstyled/system\";\n\nconst spacing = style({\n  prop: \"spacing\",\n  cssProperty: \"marginTop\",\n  themeGet: getSpace\n});\n\nexport type SpacingProps = {\n  spacing: MarginTopProps[\"marginTop\"];\n};\n\nexport { spacing };\n","import React, { ComponentProps, CSSProperties, FC } from \"react\";\nimport { Transition, TransitionGroup } from \"react-transition-group\";\nimport { TransitionStatus } from \"react-transition-group/Transition\";\nimport { forceReflow } from \"src/shared/dom-utils\";\nimport { ModalBackdrop } from \"./modal-backdrop\";\nimport { ModalContent } from \"./modal-content\";\n\nconst ANIMATION_MS = 300;\nconst OPACITY_TRANSITION = `opacity ${ANIMATION_MS}ms ease-in`;\nconst TRANSFORM_TRANSITION = `transform ${ANIMATION_MS}ms ease-in`;\n\nconst backdropTransitionStyles: Partial<Record<\n  TransitionStatus,\n  CSSProperties\n>> = {\n  entering: { opacity: 1 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0 },\n  exited: { opacity: 0 }\n};\n\nconst contentTransitionStyles: Partial<Record<\n  TransitionStatus,\n  CSSProperties\n>> = {\n  entering: { opacity: 1, transform: \"scale3d(1, 1, 1)\" },\n  entered: { opacity: 1, transform: \"scale3d(1, 1, 1)\" },\n  exiting: { opacity: 0, transform: \"scale3d(1.05, 1.05, 1)\" },\n  exited: { opacity: 0, transform: \"scale3d(1.05, 1.05, 1)\" }\n};\n\ntype Props = Readonly<{\n  isOpen: boolean;\n  onRequestClose?: () => void;\n  onExited?: () => void;\n  allowFocusOnContentBox?: boolean;\n  focusLockProps?: ComponentProps<typeof ModalBackdrop>[\"focusLockProps\"];\n  ariaLabel?: string;\n  ariaLabelledby?: string;\n}>;\n\nconst Modal: FC<Props> = ({\n  allowFocusOnContentBox,\n  focusLockProps,\n  ariaLabel,\n  ariaLabelledby,\n  isOpen,\n  onRequestClose,\n  onExited,\n  children\n}) => (\n  <TransitionGroup component={null} appear>\n    {isOpen && (\n      <Transition\n        timeout={ANIMATION_MS}\n        onEnter={forceReflow}\n        mountOnEnter\n        unmountOnExit\n        onExited={onExited}\n      >\n        {(animationState: TransitionStatus) => (\n          <ModalBackdrop\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            focusLockProps={focusLockProps}\n            style={{\n              ...backdropTransitionStyles[animationState],\n              willChange: \"opacity\",\n              transition: OPACITY_TRANSITION\n            }}\n          >\n            <ModalContent\n              ariaLabel={ariaLabel}\n              ariaLabelledby={ariaLabelledby}\n              allowFocusOnContentBox={allowFocusOnContentBox}\n              style={{\n                ...contentTransitionStyles[animationState],\n                willChange: \"opacity, transform\",\n                transition: `${OPACITY_TRANSITION}, ${TRANSFORM_TRANSITION}`\n              }}\n            >\n              {children}\n            </ModalContent>\n          </ModalBackdrop>\n        )}\n      </Transition>\n    )}\n  </TransitionGroup>\n);\n\nexport { Modal };\n","import { styled } from \"src/shared/styled\";\nimport { spacing, SpacingProps } from \"./spacing\";\n\ntype Props = SpacingProps;\n\nconst Stack = styled.div<Props>`\n  && > * + * {\n    ${spacing}\n  }\n\n  /* Fix for emotion SSR: */\n  && > style + * {\n    margin-top: 0 !important;\n  }\n\n  /*\n    Allow 'margin-bottom: auto' to be used on a stack child\n    so that a child can push its following sibling down.\n    */\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n`;\n\nexport { Stack };\n","import css from \"@emotion/css/macro\";\nimport { styled, AsProps } from \"src/shared/styled\";\n\n// See https://zellwk.com/blog/hide-content-accessibly/\n// Compatibility: IE9+ and modern browsers; see\n// https://caniuse.com/#feat=mdn-css_selectors_not\n\ntype Props = AsProps & {\n  // If true, make the content visible when it has focus.\n  isFocusable?: boolean;\n};\n\nconst visuallyHidden = (props: Props) => css`\n  /* && is for increased specificity: */\n  &&${props.isFocusable ? \":not(:focus):not(:active)\" : \"\"} {\n    border: 0;\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: auto;\n    margin: 0;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n`;\n\nconst VisuallyHidden = styled.span<Props>`\n  ${visuallyHidden}\n`;\n\nexport { VisuallyHidden, visuallyHidden };\n","import { th } from \"@xstyled/system\";\nimport { styled } from \"src/shared/styled\";\n\nconst SkipLinkButton = styled.button`\n  position: absolute;\n  left: 1em;\n  top: 1em;\n  appearance: none;\n  background: ${th.color(\"white\")};\n  border-spacing: 0;\n  border-radius: ${th.radius(\"xs\")};\n  color: ${th.color(\"link\")};\n  font-weight: ${th.fontWeight(\"normal\")};\n  text-decoration: underline;\n  padding: ${th.space(1)};\n`;\n\nexport { SkipLinkButton };\n","import React from \"react\";\nimport { useRefsMap } from \"./use-refs-map\";\n\nconst SkipLinksContext = React.createContext<ReturnType<typeof useRefsMap>>({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  addRef: () => {},\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  removeRef: () => {},\n  getRef: () => null\n});\n\nconst SkipLinksProvider: React.FC = ({ children }) => {\n  const refsMap = useRefsMap();\n\n  return (\n    <SkipLinksContext.Provider value={refsMap}>\n      {children}\n    </SkipLinksContext.Provider>\n  );\n};\n\nexport { SkipLinksContext, SkipLinksProvider };\n","import React from \"react\";\n\ntype Ref = React.RefObject<HTMLElement>;\n\ntype RefsMapValue = {\n  map: Record<string, Ref>;\n  api: {\n    addRef(id: string, ref: Ref): void;\n    getRef(id: string): Ref | null;\n    removeRef(id: string, ref: Ref): void;\n  };\n};\n\n// A lookup of ID to component ref.\nconst useRefsMap = () => {\n  const refsMapValue = React.useRef<RefsMapValue>();\n\n  if (!refsMapValue.current) {\n    const value = {\n      map: {} as Record<string, Ref>,\n      api: {\n        addRef: (id: string, ref: Ref): void => {\n          value.map[id] = ref;\n        },\n        getRef: (id: string): Ref | null => value.map[id] || null,\n        removeRef: (id: string, ref: Ref): void => {\n          if (value.map[id] && value.map[id] === ref) {\n            delete value.map[id];\n          }\n        }\n      }\n    };\n\n    refsMapValue.current = value;\n  }\n\n  return refsMapValue.current.api;\n};\n\nexport { useRefsMap };\n","import React from \"react\";\nimport { VisuallyHidden } from \"src/shared/visually-hidden\";\nimport { makeFocusable } from \"src/shared/dom-utils\";\nimport { SkipLinkButton } from \"./skip-link-button\";\nimport { SkipLinksContext } from \"./skip-links-context\";\n\ntype Props = {\n  targetId: string;\n};\n\nconst SkipLink: React.FC<Props> = ({ targetId, children }) => {\n  const skipLinks = React.useContext(SkipLinksContext);\n\n  const handleClick = React.useCallback(() => {\n    const targetRef = skipLinks.getRef(targetId);\n    if (!targetRef || !targetRef.current) {\n      return;\n    }\n\n    const element = targetRef.current;\n    makeFocusable(element);\n    element.scrollIntoView();\n    element.focus();\n  }, [targetId, skipLinks]);\n\n  return (\n    <VisuallyHidden isFocusable as={SkipLinkButton} onClick={handleClick}>\n      {children}\n    </VisuallyHidden>\n  );\n};\n\nexport { SkipLink };\n","import tabbable from \"tabbable\";\n\nconst makeFocusable = (element: HTMLElement) => {\n  if (!tabbable.isFocusable(element)) {\n    element.setAttribute(\"tabindex\", \"-1\");\n\n    const eventListener = () => {\n      element.removeEventListener(\"blur\", eventListener);\n      element.removeAttribute(\"tabindex\");\n    };\n\n    element.addEventListener(\"blur\", eventListener);\n  }\n};\n\nexport { makeFocusable };\n","import { PageBox } from \"./page-box\";\nimport { PageHeader } from \"./page-header\";\n\nconst Page = {\n  Box: PageBox,\n  Header: PageHeader\n} as const;\n\nexport { Page };\n","import React from \"react\";\nimport { Box } from \"src/shared/box\";\nimport { Stack } from \"src/shared/stack\";\n\nconst PageBox: React.FC = ({ children }) => (\n  <Box m={{ xs: 3, sm: 5 }}>\n    <Stack spacing={{ xs: 2, sm: 3 }}>{children}</Stack>\n  </Box>\n);\n\nexport { PageBox };\n","import React from \"react\";\nimport { Heading } from \"src/shared/heading\";\nimport { useSkipLinkTarget } from \"src/shared/skip-link\";\n\ntype Props = {\n  title: string;\n};\n\nconst PageHeader: React.FC<Props> = ({ title }) => {\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  useSkipLinkTarget(\"main-content\", headingRef);\n\n  return (\n    <Heading\n      ref={headingRef}\n      pb={{ xs: 1, sm: 2 }}\n      fontSize={{ xs: 4, sm: 5 }}\n      fontWeight=\"light\"\n      borderBottom=\"1px solid\"\n      borderColor=\"contrastCool500\"\n    >\n      {title}\n    </Heading>\n  );\n};\n\nexport { PageHeader };\n","import React from \"react\";\nimport { SkipLinksContext } from \"./skip-links-context\";\n\nconst useSkipLinkTarget = (\n  targetId: string,\n  targetRef: React.RefObject<HTMLElement>\n) => {\n  const skipLinks = React.useContext(SkipLinksContext);\n\n  React.useEffect(() => {\n    if (!targetId || !targetRef) {\n      return;\n    }\n\n    skipLinks.addRef(targetId, targetRef);\n    return () => skipLinks.removeRef(targetId, targetRef);\n  }, [targetId, targetRef, skipLinks]);\n};\n\nexport { useSkipLinkTarget };\n","import {\n  color,\n  typography,\n  th,\n  ColorProps,\n  TypographyProps\n} from \"@xstyled/system\";\nimport { styled } from \"src/shared/styled\";\n\ntype Props = ColorProps & TypographyProps;\n\nconst Paragraph = styled.p<Props>`\n  margin: 0;\n  padding: 0;\n  max-width: ${th.size(\"copy\")};\n  line-height: ${th.lineHeight(\"md\")};\n  ${color}\n  ${typography}\n`;\n\nexport { Paragraph };\n","import React from \"react\";\nimport { useId } from \"react-use-id-hook\";\nimport { Heading } from \"src/shared/heading\";\nimport { Stack } from \"src/shared/stack\";\n\ntype Props = {\n  title: string;\n};\n\nconst RadioButtonGroupContext = React.createContext(\"\");\n\nconst RadioButtonGroup: React.FC<Props> = ({ title, children }) => {\n  const headingId = useId();\n  const groupNameId = useId();\n\n  return (\n    <Stack\n      spacing={{ xs: 2, md: 3 }}\n      role=\"radiogroup\"\n      aria-labelledby={headingId}\n    >\n      <Heading id={headingId} as=\"h3\">\n        {title}\n      </Heading>\n      <RadioButtonGroupContext.Provider value={groupNameId}>\n        {children}\n      </RadioButtonGroupContext.Provider>\n    </Stack>\n  );\n};\n\nexport { RadioButtonGroup, RadioButtonGroupContext };\n","import React from \"react\";\nimport { th } from \"@xstyled/system\";\nimport { useId } from \"react-use-id-hook\";\nimport { focusRing } from \"src/shared/mixins\";\nimport { styled } from \"src/shared/styled\";\nimport { RadioButtonGroupContext } from \"./radio-button-group\";\n\n// Guide used for styling this control:\n// https://scottaohara.github.io/a11y_styled_form_controls/src/radio-button/\n// (pattern 1)\n\ntype Props = {\n  label: string;\n  value: string;\n  selectedValue: string;\n  disabled?: boolean;\n  onChange: (value: string) => void;\n};\n\nconst StyledWrap = styled.div`\n  position: relative;\n  align-self: flex-start;\n`;\n\nconst StyledInput = styled.input`\n  position: absolute;\n  appearance: none;\n  background: none;\n  opacity: 1e-6;\n  z-index: 2;\n  margin: 0;\n  padding: 0;\n  border: 1px solid;\n  width: 1.125em;\n  height: 1.125em;\n  font-size: 1rem;\n  left: 0.125em;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n\n  /*\n  Had to add the rule here instead of in StyledLabel because\n  CSS auto-formatting was breaking the rule.\n  */\n  &[disabled] + label {\n    opacity: 0.5;\n  }\n\n  &[disabled] {\n    cursor: not-allowed;\n  }\n`;\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  padding-left: 2em;\n  user-select: none;\n\n  input:not([disabled]) + & {\n    cursor: pointer;\n  }\n\n  input[disabled] + & {\n    cursor: not-allowed;\n  }\n\n  /* before is the outer border, after is the inner indicator */\n\n  &::before,\n  &::after {\n    content: \" \";\n    position: absolute;\n    box-sizing: border-box;\n    border-radius: 100%;\n    border: 1px solid;\n    width: 1.125em;\n    height: 1.125em;\n    left: 0.125em;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n\n  &::before {\n    box-shadow: 0 0 0 1px ${th.color(\"gray500\")};\n  }\n\n  input:checked + &::before {\n    border-color: transparent;\n    box-shadow: 0 0 0 2px ${th.color(\"primary900\")};\n  }\n\n  input:focus + &::before {\n    border-color: transparent;\n    ${focusRing}\n  }\n\n  input:checked + &::after {\n    border-color: ${th.color(\"white\")};\n    border-width: 4px;\n    box-shadow: inset 0 0 0 5px ${th.color(\"primary900\")};\n  }\n`;\n\nconst RadioButton: React.FC<Props> = ({\n  label,\n  value,\n  selectedValue,\n  disabled,\n  onChange\n}) => {\n  const inputId = useId();\n  const groupName = React.useContext(RadioButtonGroupContext);\n\n  return (\n    <StyledWrap>\n      <StyledInput\n        id={inputId}\n        type=\"radio\"\n        name={groupName}\n        checked={selectedValue === value}\n        disabled={disabled}\n        onChange={() => onChange(value)}\n      />\n      <StyledLabel htmlFor={inputId}>{label}</StyledLabel>\n    </StyledWrap>\n  );\n};\n\nexport { RadioButton };\n","import { RadioButton } from \"./radio-button\";\nimport { RadioButtonGroup } from \"./radio-button-group\";\n\ntype RadioButtonType = typeof RadioButton & {\n  Group: typeof RadioButtonGroup;\n};\n\nconst RadioButtonExport = RadioButton as RadioButtonType;\nRadioButtonExport.Group = RadioButtonGroup;\n\nexport { RadioButtonExport as RadioButton };\n","import React from \"react\";\nimport { th, StyledSystemLength } from \"@xstyled/system\";\nimport { styled, shouldForwardProp } from \"src/shared/styled\";\n\ntype Props = {\n  // If there is more than `limit` children, stack them on top of each other\n  // regardless of the width of the available content area. Defaults to the\n  // number of children.\n  limit?: number;\n  // The margin between the children.\n  spacing: import(\"csstype\").MarginTopProperty<StyledSystemLength>;\n  // If the width of the available content area is less than this threshold\n  // then the children are always stacked on top of each other.\n  threshold: import(\"csstype\").WidthProperty<StyledSystemLength>;\n};\n\nconst StyledOuterWrap = styled.div`\n  display: block;\n`;\n\nconst StyledInnerWrap = styled(\"div\", shouldForwardProp)<Required<Props>>`\n  display: flex;\n  flex-wrap: wrap;\n  overflow: hidden;\n  margin: calc((${props => th.space(props.spacing)} / 2) * -1);\n\n  && > * {\n    flex-basis: calc(\n      (\n          ${props => th.size(props.threshold)} -\n            (100% - ${props => th.space(props.spacing)})\n        ) * 999\n    );\n    margin: calc(${props => th.space(props.spacing)} / 2);\n    flex-grow: 1;\n  }\n\n  /* If there are more than limit children, force them to stack */\n  && > :nth-last-child(n + ${props => props.limit + 1}),\n  && > :nth-last-child(n + ${props =>\n    props.limit +\n    1}) ~ * /* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */ {\n    flex-basis: 100%;\n  }\n`;\n\n// A.k.a. the holy albatross\nconst Switcher: React.FC<Props> = ({ limit, spacing, threshold, children }) => (\n  <StyledOuterWrap>\n    <StyledInnerWrap\n      limit={limit || React.Children.count(children)}\n      spacing={spacing}\n      threshold={threshold}\n    >\n      {children}\n    </StyledInnerWrap>\n  </StyledOuterWrap>\n);\n\nexport { Switcher };\n","import { Store } from \"pullstate\";\n\nenum AnimationLibrary {\n  ReactSpring = \"ReactSpring\",\n  ReactTransitionGroup = \"ReactTransitionGroup\"\n}\n\nenum PageWeight {\n  Light = \"Light\",\n  Heavy = \"Heavy\"\n}\n\nenum AnimationDuration {\n  Fast = \"Fast\",\n  Slow = \"Slow\"\n}\n\ninterface AnimationStore {\n  animationDuration: AnimationDuration;\n  animationLibrary: AnimationLibrary;\n  pageWeight: PageWeight;\n  shouldDelayNavigation: boolean;\n}\n\nconst AnimationStore = new Store<AnimationStore>({\n  animationDuration: AnimationDuration.Fast,\n  animationLibrary: AnimationLibrary.ReactTransitionGroup,\n  pageWeight: PageWeight.Heavy,\n  shouldDelayNavigation: true\n});\n\nconst selectAnimationDurationMs = (store: AnimationStore) =>\n  store.animationDuration === AnimationDuration.Fast ? 250 : 1500;\n\nexport {\n  AnimationDuration,\n  AnimationLibrary,\n  AnimationStore,\n  PageWeight,\n  selectAnimationDurationMs\n};\n","// Code from: https://stackoverflow.com/a/52373525\n\ntype Not<T> = [T] extends [never] ? unknown : never;\n\ntype Extractable<T, U> = Not<\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  U extends any ? Not<T extends U ? unknown : never> : never\n>;\n\nconst asEnum = <\n  E extends Record<keyof E, string | number>,\n  K extends string | number\n>(\n  e: E,\n  k: K & Extractable<E[keyof E], K>\n): Extract<E[keyof E], K> => {\n  // runtime guard, shouldn't need it at compiler time\n  if (Object.values(e).indexOf(k) < 0) {\n    throw new Error(\"Expected one of \" + Object.values(e).join(\", \"));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return k as any; // assertion\n};\n\nexport { asEnum };\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport global from \"global\";\n\ntype Event = React.MouseEvent<HTMLElement, MouseEvent>;\n\nconst isModifiedEvent = (event: Event) =>\n  Boolean(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\n// Creates a click handler to be used with a react-router Link component\n// that delays navigating to the new URL.\nconst useDelayedLinkClickHandler = (\n  to: string,\n  delayMs: number,\n  onClick?: (event: Event) => void\n) => {\n  const history = useHistory();\n\n  const handler = React.useCallback(\n    (event: Event) => {\n      if (onClick) {\n        onClick(event);\n      }\n\n      // Stop the Link component from running the default handling:\n      event.preventDefault();\n\n      if (event.button !== 0 || isModifiedEvent(event)) {\n        return;\n      }\n\n      if (delayMs === 0) {\n        history.push(to);\n        return;\n      }\n\n      global.setTimeout(() => {\n        history.push(to);\n      }, delayMs);\n    },\n    [to, delayMs, onClick, history]\n  );\n\n  return handler;\n};\n\nexport { useDelayedLinkClickHandler };\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport window from \"global/window\";\n\nconst useScrollToTop = () => {\n  const location = useLocation();\n  React.useEffect(() => window.scrollTo(0, 0), [location.pathname]);\n};\n\nexport { useScrollToTop };\n","import React from \"react\";\nimport { th } from \"@xstyled/system\";\nimport { css } from \"@emotion/core\";\nimport { styled } from \"src/shared\";\n\ntype Props = Readonly<{\n  id: string;\n  allowFocusOnContentBox?: boolean;\n  style?: React.CSSProperties;\n  children: React.ReactNode;\n}>;\n\nconst StyledWrap = styled.nav<Pick<Props, \"allowFocusOnContentBox\">>`\n  position: fixed;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  width: 80vw;\n  max-width: 300px;\n  color: ${th.color(\"white\")};\n  background-color: ${th.color(\"primary900\")};\n  box-shadow: ${th.shadow(\"xxl\")};\n\n  ${props =>\n    props.allowFocusOnContentBox &&\n    css`\n      outline: 0;\n    `}\n`;\n\nexport const ModalSidebarContent = React.forwardRef<HTMLDivElement, Props>(\n  ({ id, allowFocusOnContentBox, children, ...props }: Props, ref) => (\n    <StyledWrap\n      ref={ref}\n      id={id}\n      aria-modal=\"true\"\n      tabIndex={allowFocusOnContentBox ? 0 : undefined}\n      {...props}\n    >\n      {children}\n    </StyledWrap>\n  )\n);\n","import React, { CSSProperties, FC } from \"react\";\nimport { Transition, TransitionGroup } from \"react-transition-group\";\nimport { TransitionStatus } from \"react-transition-group/Transition\";\nimport { forceReflow, ModalBackdrop } from \"src/shared\";\nimport { ModalSidebarContent } from \"./modal-sidebar-content\";\n\nconst backdropTransitionStyles: Partial<Record<\n  TransitionStatus,\n  CSSProperties\n>> = {\n  entering: { opacity: 1 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0 },\n  exited: { opacity: 0 }\n};\n\nconst contentTransitionStyles: Partial<Record<\n  TransitionStatus,\n  CSSProperties\n>> = {\n  entering: { opacity: 1, transform: \"translate3d(0, 0, 0)\" },\n  entered: { opacity: 1, transform: \"translate3d(0, 0, 0)\" },\n  exiting: { opacity: 0, transform: \"translate3d(100px, 0, 0)\" },\n  exited: { opacity: 0, transform: \"translate3d(100px, 0, 0)\" }\n};\n\ntype Props = Readonly<{\n  id: string;\n  isOpen: boolean;\n  duration: number;\n  onRequestClose?: () => void;\n  allowFocusOnContentBox?: boolean;\n}>;\n\nconst ModalSidebar: FC<Props> = ({\n  id,\n  allowFocusOnContentBox,\n  isOpen,\n  onRequestClose,\n  duration,\n  children\n}) => {\n  const OPACITY_TRANSITION = `opacity ${duration}ms ease-in`;\n  const TRANSFORM_TRANSITION = `transform ${duration}ms ease-in`;\n\n  return (\n    <TransitionGroup component={null} appear>\n      {isOpen && (\n        <Transition\n          timeout={duration}\n          onEnter={forceReflow}\n          mountOnEnter\n          unmountOnExit\n        >\n          {(animationState: TransitionStatus) => (\n            <ModalBackdrop\n              isOpen={isOpen}\n              onRequestClose={onRequestClose}\n              style={{\n                ...backdropTransitionStyles[animationState],\n                willChange: \"opacity\",\n                transition: OPACITY_TRANSITION\n              }}\n            >\n              <ModalSidebarContent\n                id={id}\n                allowFocusOnContentBox={allowFocusOnContentBox}\n                style={{\n                  ...contentTransitionStyles[animationState],\n                  willChange: \"opacity, transform\",\n                  transition: `${OPACITY_TRANSITION}, ${TRANSFORM_TRANSITION}`\n                }}\n              >\n                {children}\n              </ModalSidebarContent>\n            </ModalBackdrop>\n          )}\n        </Transition>\n      )}\n    </TransitionGroup>\n  );\n};\n\nexport { ModalSidebar };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { th } from \"@xstyled/system\";\nimport { useStoreState } from \"pullstate\";\nimport { useDelayedLinkClickHandler, styled } from \"src/shared\";\nimport { AnimationStore, selectAnimationDurationMs } from \"src/state\";\n\nconst EXTRA_DELAY_MS = 50;\n\nconst StyledLink = styled.a`\n  color: ${th.color(\"white\")};\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  padding: ${th.space(1)} 0;\n`;\n\ntype Props = {\n  to: string;\n  label: string;\n  onClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst NavLink = ({ to, label, onClick }: Props) => {\n  const { duration, shouldDelayNavigation } = useStoreState(\n    AnimationStore,\n    s => ({\n      duration: selectAnimationDurationMs(s),\n      shouldDelayNavigation: s.shouldDelayNavigation\n    })\n  );\n\n  const adjustedDuration = shouldDelayNavigation\n    ? duration + EXTRA_DELAY_MS\n    : 0;\n\n  const handleClick = useDelayedLinkClickHandler(to, adjustedDuration, onClick);\n\n  return (\n    <Link to={to} component={StyledLink} onClick={handleClick}>\n      {label}\n    </Link>\n  );\n};\n\nexport { NavLink };\n","import React from \"react\";\nimport { th } from \"@xstyled/system\";\nimport { styled } from \"src/shared\";\nimport { NavLink } from \"./nav-link\";\n\nconst StyledList = styled.ul`\n  margin: 0;\n  padding: ${th.space(1)} ${th.space(2)};\n  list-style: none;\n\n  & > li + li {\n    border-top: ${th.borderWidth(\"hair\")} solid ${th.color(\"contrastHot500\")};\n  }\n`;\n\ntype Props = {\n  pages: ReadonlyArray<{\n    path: string;\n    title: string;\n  }>;\n  onClick: () => void;\n};\n\nconst NavLinkList: React.FC<Props> = ({ pages, onClick }) => (\n  <StyledList>\n    {pages.map(page => (\n      <li key={page.path}>\n        <NavLink to={page.path} label={page.title} onClick={onClick} />\n      </li>\n    ))}\n  </StyledList>\n);\n\nexport { NavLinkList };\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useStoreState } from \"pullstate\";\nimport { Box, Button, Heading, Icons, SkipLink } from \"src/shared\";\nimport { AnimationStore, selectAnimationDurationMs } from \"src/state\";\nimport { ModalSidebar } from \"./modal-sidebar\";\nimport { NavLinkList } from \"./nav-link-list\";\n\nconst SIDEBAR_ID = \"main-sidebar\";\n\ntype Props = {\n  pages: readonly {\n    path: string;\n    title: string;\n  }[];\n};\n\nconst Header: React.FC<Props> = ({ pages }) => {\n  const [sidebarIsOpen, setSidebarIsOpen] = React.useState(false);\n  const handleClose = React.useCallback(() => setSidebarIsOpen(false), []);\n\n  // Ensure sidebar closes if user uses browser back/forward buttons:\n  const location = useLocation();\n  React.useEffect(handleClose, [location]);\n\n  const duration = useStoreState(AnimationStore, s =>\n    selectAnimationDurationMs(s)\n  );\n\n  return (\n    <Box\n      as=\"header\"\n      color=\"white\"\n      backgroundColor=\"primary900\"\n      p={{ xs: 1, sm: 2 }}\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      boxShadow=\"md\"\n      zIndex=\"header\"\n    >\n      <SkipLink targetId=\"main-content\">Skip to main content</SkipLink>\n      <Heading as=\"h2\" fontSize={{ xs: 3, sm: 4 }} fontWeight=\"light\">\n        React Experiments\n      </Heading>\n      <Button\n        useCSSAnimation\n        variant=\"outlineInverted\"\n        size=\"icon\"\n        aria-haspopup=\"menu\"\n        aria-expanded={sidebarIsOpen}\n        aria-controls={SIDEBAR_ID}\n        aria-label=\"Open site navigation menu\"\n        onClick={() => setSidebarIsOpen(true)}\n      >\n        <Icons.Menu color=\"white\" size={5} />\n      </Button>\n      <ModalSidebar\n        isOpen={sidebarIsOpen}\n        onRequestClose={handleClose}\n        id={SIDEBAR_ID}\n        duration={duration}\n      >\n        <NavLinkList pages={pages} onClick={handleClose} />\n      </ModalSidebar>\n    </Box>\n  );\n};\n\nexport { Header };\n","import { up } from \"@xstyled/system\";\nimport { css } from \"@emotion/core\";\nimport { styled } from \"src/shared\";\n\n// An intrinsic placeholder wrapper for the hero image\n// http://daverupert.com/2015/12/intrinsic-placeholders-with-picture/\nconst HeroImageWrap = styled.div`\n  width: 100%;\n  height: 0;\n  padding-top: 100%; /* Square aspect ratio for portrait mode */\n  position: relative;\n  overflow: hidden;\n  background-color: ${props => props.theme.colors.gray100};\n\n  ${up(\n    \"sm\",\n    css`\n      padding-top: 60%; /* Rectangular aspect ratio for landscape mode */\n    `\n  )}\n\n  /*\n    IE 10 and 11 only (not Edge).\n    The fallback image (e.g., for IE) has landscape aspect ratio\n    so needs padding-top: 60%;, but it won't get that on\n    narrow screens (<600px).\n  */\n  @media all and (-ms-high-contrast: none) {\n    & {\n      padding-top: 60%;\n    }\n  }\n`;\n\nexport { HeroImageWrap };\n","import React from \"react\";\nimport { styled } from \"src/shared\";\n\ntype StyledProps = {\n  isLoaded: boolean;\n};\n\nconst StyledImage = styled.img<StyledProps>`\n  width: 100%;\n  height: auto;\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: ${props => (props.isLoaded ? 1 : 0)};\n  transition: opacity ${props => props.theme.timings.contentFade}ms ease-in;\n  will-change: opacity;\n`;\n\ntype Props = React.ImgHTMLAttributes<HTMLImageElement>;\n\nconst InnerImage: React.FC<Props> = props => {\n  const [isLoaded, setIsLoaded] = React.useState(false);\n\n  return (\n    <StyledImage\n      {...props}\n      onLoad={() => setIsLoaded(true)}\n      isLoaded={isLoaded}\n    />\n  );\n};\n\nexport { InnerImage };\n","import React from \"react\";\nimport { useTheme } from \"src/shared\";\nimport { HeroImageWrap } from \"./hero-image-wrap\";\nimport { InnerImage } from \"./inner-image\";\nimport {\n  WEBP_MIME_TYPE,\n  WEBP_EXTENSION,\n  JPEG_MIME_TYPE,\n  JPEG_EXTENSION\n} from \"./constants\";\n\n// Object fit could be an option in the future (no support in IE).\n// https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit\n\nconst createLandscapeSrcSet = (imagePath: string, extension: string) =>\n  `${imagePath}@half${extension} 1000w, ${imagePath}${extension} 2000w`;\n\nconst createPortraitSrcSet = (imagePath: string, extension: string) =>\n  `${imagePath}@half${extension} 600w, ${imagePath}${extension} 1200w`;\n\ntype Props = {\n  landscapeImagePath: string;\n  portraitImagePath: string;\n  altText: string;\n};\n\nconst HeroImage: React.FC<Props> = ({\n  landscapeImagePath,\n  portraitImagePath,\n  altText,\n  children\n}) => {\n  const themeObj = useTheme();\n  const landscapeMediaQuery = `(min-width: ${themeObj.breakpoints.sm})`;\n\n  return (\n    <HeroImageWrap>\n      <picture>\n        <source\n          media={landscapeMediaQuery}\n          type={WEBP_MIME_TYPE}\n          srcSet={createLandscapeSrcSet(landscapeImagePath, WEBP_EXTENSION)}\n          sizes=\"100vw\"\n        />\n        <source\n          media={landscapeMediaQuery}\n          type={JPEG_MIME_TYPE}\n          srcSet={createLandscapeSrcSet(landscapeImagePath, JPEG_EXTENSION)}\n          sizes=\"100vw\"\n        />\n        <source\n          type={WEBP_MIME_TYPE}\n          srcSet={createPortraitSrcSet(portraitImagePath, WEBP_EXTENSION)}\n          sizes=\"100vw\"\n        />\n        <source\n          type={JPEG_MIME_TYPE}\n          srcSet={createPortraitSrcSet(portraitImagePath, JPEG_EXTENSION)}\n          sizes=\"100vw\"\n        />\n        <InnerImage\n          src={`${landscapeImagePath}${JPEG_EXTENSION}`}\n          alt={altText}\n        />\n      </picture>\n      {children}\n    </HeroImageWrap>\n  );\n};\n\nexport { HeroImage };\n","const WEBP_MIME_TYPE = \"image/webp\";\nconst WEBP_EXTENSION = \".webp\";\nconst JPEG_MIME_TYPE = \"image/jpeg\";\nconst JPEG_EXTENSION = \".jpg\";\n\nexport { WEBP_MIME_TYPE, WEBP_EXTENSION, JPEG_MIME_TYPE, JPEG_EXTENSION };\n","import React from \"react\";\nimport { LoremIpsum } from \"lorem-ipsum\";\nimport { Paragraph } from \"src/shared\";\n\nconst lorem = new LoremIpsum({\n  sentencesPerParagraph: {\n    max: 8,\n    min: 8\n  }\n});\n\nconst createParagraphs = (maxParagraphs: number) => {\n  const paragraphs: Array<JSX.Element> = [];\n\n  for (let i = 0; i < maxParagraphs; ++i) {\n    paragraphs.push(\n      <Paragraph key={i}>{lorem.generateParagraphs(1)}</Paragraph>\n    );\n  }\n\n  return paragraphs;\n};\n\nexport { createParagraphs };\n","import React from \"react\";\n\nconst ExampleContext = React.createContext({ someProperty: \"\" });\n\ntype Props = {\n  useStableContextValue: boolean;\n};\n\nconst ExampleContextProvider: React.FC<Props> = ({\n  useStableContextValue,\n  children\n}) => {\n  const stableValue = React.useRef({ someProperty: \"value\" });\n\n  return (\n    <ExampleContext.Provider\n      value={\n        useStableContextValue ? stableValue.current : { someProperty: \"value\" }\n      }\n    >\n      {children}\n    </ExampleContext.Provider>\n  );\n};\n\nexport { ExampleContext, ExampleContextProvider };\n","import React from \"react\";\nimport { readableColor } from \"polished\";\nimport { Box, Paragraph, getRandomColor } from \"src/shared\";\nimport { ExampleContext } from \"./example-context\";\n\nconst ExampleContextConsumer = React.memo(() => {\n  React.useContext(ExampleContext);\n  const color = getRandomColor();\n\n  return (\n    <Box p={1} color={readableColor(color)} backgroundColor={color}>\n      <Paragraph>Hello you</Paragraph>\n    </Box>\n  );\n});\n\nexport { ExampleContextConsumer };\n","// From: https://github.com/ianfabs/rholor/blob/master/rholor.js\n\nconst HEX_DIGITS = \"0123456789ABCDEF\";\n\nconst getRandomColor = () => {\n  let color = \"#\";\n\n  for (let i = 0; i < 6; i++) {\n    color += HEX_DIGITS[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n};\n\nexport { getRandomColor };\n","import React from \"react\";\nimport { useStoreState } from \"pullstate\";\nimport { asEnum, RadioButton } from \"src/shared\";\nimport { AnimationStore, AnimationDuration } from \"src/state\";\n\nconst AnimationDurationField = () => {\n  const animationDuration = useStoreState(\n    AnimationStore,\n    s => s.animationDuration\n  );\n\n  return (\n    <RadioButton.Group title=\"Animation Duration\">\n      {Object.keys(AnimationDuration).map(key => (\n        <RadioButton\n          key={key}\n          label={key}\n          value={key}\n          selectedValue={animationDuration}\n          onChange={() =>\n            AnimationStore.update(s => {\n              s.animationDuration = asEnum(AnimationDuration, key);\n            })\n          }\n        />\n      ))}\n    </RadioButton.Group>\n  );\n};\n\nexport { AnimationDurationField };\n","import React from \"react\";\nimport { useStoreState } from \"pullstate\";\nimport { asEnum, RadioButton } from \"src/shared\";\nimport { AnimationStore, AnimationLibrary } from \"src/state\";\n\nconst getOptionLabel = (key: string) => {\n  switch (key) {\n    case AnimationLibrary.ReactSpring:\n      return \"react-spring\";\n    case AnimationLibrary.ReactTransitionGroup:\n      return \"react-transition-group\";\n    default:\n      throw new Error(`unknown key '${key}'`);\n  }\n};\n\nconst AnimationLibraryField = () => {\n  const animationLibrary = useStoreState(\n    AnimationStore,\n    s => s.animationLibrary\n  );\n\n  return (\n    <RadioButton.Group title=\"Animation Library\">\n      {Object.keys(AnimationLibrary).map(key => (\n        <RadioButton\n          key={key}\n          label={getOptionLabel(key)}\n          value={key}\n          selectedValue={animationLibrary}\n          onChange={() =>\n            AnimationStore.update(s => {\n              s.animationLibrary = asEnum(AnimationLibrary, key);\n            })\n          }\n        />\n      ))}\n    </RadioButton.Group>\n  );\n};\n\nexport { AnimationLibraryField };\n","import React from \"react\";\nimport { useStoreState } from \"pullstate\";\nimport { asEnum, RadioButton } from \"src/shared\";\nimport { AnimationStore, PageWeight } from \"src/state\";\n\nconst PageWeightField = () => {\n  const pageWeight = useStoreState(AnimationStore, s => s.pageWeight);\n\n  return (\n    <RadioButton.Group title=\"Page Weight\">\n      {Object.keys(PageWeight).map(key => (\n        <RadioButton\n          key={key}\n          label={key}\n          value={key}\n          selectedValue={pageWeight}\n          onChange={() =>\n            AnimationStore.update(s => {\n              s.pageWeight = asEnum(PageWeight, key);\n            })\n          }\n        />\n      ))}\n    </RadioButton.Group>\n  );\n};\n\nexport { PageWeightField };\n","import React from \"react\";\nimport { useStoreState } from \"pullstate\";\nimport { Checkbox } from \"src/shared\";\nimport { AnimationStore } from \"src/state\";\n\nconst ShouldDelayNavigationField = () => {\n  const shouldDelayNavigation = useStoreState(\n    AnimationStore,\n    s => s.shouldDelayNavigation\n  );\n\n  return (\n    <Checkbox\n      label=\"Delay URL change until after animations\"\n      name=\"shouldDelayNavigation\"\n      checked={shouldDelayNavigation}\n      onChange={() =>\n        AnimationStore.update(s => {\n          s.shouldDelayNavigation = !shouldDelayNavigation;\n        })\n      }\n    />\n  );\n};\n\nexport { ShouldDelayNavigationField };\n","import React from \"react\";\nimport {\n  Box,\n  Page,\n  Paragraph,\n  useScrollToTop,\n  Button,\n  Checkbox,\n  Cluster\n} from \"src/shared\";\n\nconst LIVE_TEXT = [\n  \"This is the version one text.\",\n  \"This is the version two text.\",\n  \"This is the version three text.\"\n] as const;\n\ntype Props = {\n  title: string;\n};\n\nconst AriaLivePage: React.FC<Props> = ({ title }) => {\n  useScrollToTop();\n\n  const [liveTextIndex, setLiveTextIndex] = React.useState(0);\n  const handleClick = () =>\n    setLiveTextIndex(index => (index + 1 >= LIVE_TEXT.length ? 0 : index + 1));\n\n  const ariaLiveRegionRef = React.useRef<HTMLDivElement>(null);\n\n  const [ariaAtomic, setAriaAtomic] = React.useState(false);\n\n  return (\n    <Page.Box>\n      <Page.Header title={title} />\n      <Cluster spacing={2}>\n        <Button useCSSAnimation onClick={handleClick}>\n          Change live text\n        </Button>\n        <Checkbox\n          label=\"Use aria-atomic\"\n          name=\"ariaAtomic\"\n          checked={ariaAtomic}\n          onChange={() => setAriaAtomic(value => !value)}\n        />\n      </Cluster>\n      <Box\n        ref={ariaLiveRegionRef}\n        aria-live=\"polite\"\n        aria-atomic={ariaAtomic}\n        backgroundColor=\"papayawhip\"\n        flexDirection=\"column\"\n        p={2}\n        borderRadius=\"sm\"\n        boxShadow=\"md\"\n      >\n        <Paragraph>This is the stable text.</Paragraph>\n        <Paragraph>{LIVE_TEXT[liveTextIndex]}</Paragraph>\n      </Box>\n    </Page.Box>\n  );\n};\n\nexport { AriaLivePage };\n","import React from \"react\";\nimport { Global, css } from \"@emotion/core\";\nimport emotionNormalize from \"emotion-normalize\";\n\nconst GlobalStyle = () => (\n  <Global\n    styles={theme => css`\n      ${emotionNormalize}\n\n      body {\n        font-family: ${theme.fonts.body};\n      }\n\n      p,\n      label {\n        line-height: ${theme.lineHeights.md};\n      }\n\n      /*\n      Change the box model to be border-box by default,\n      using the inherit method:\n      */\n      html {\n        box-sizing: border-box;\n      }\n      *,\n      *:before,\n      *:after {\n        box-sizing: inherit;\n      }\n    `}\n  />\n);\n\nexport { GlobalStyle };\n","import { rpxTransformers } from \"@xstyled/system\";\nimport css from \"@emotion/css/macro\";\n\n// Documentation for xstyled system theme format:\n// https://www.smooth-code.com/open-source/xstyled/docs/theme-specification/\n\nconst baseTheme = {\n  transformers: {\n    ...rpxTransformers\n  },\n  name: \"default\",\n  colors: {\n    primary900: \"#C52184\",\n    primary500: \"#E574BC\",\n    primary100: \"#F9B4ED\",\n    contrastHot500: \"#F8CA1F\",\n    contrastCool500: \"#60B4B4\",\n    transparent: \"rgba(0,0,0,0)\",\n    black: \"#000\",\n    gray900: \"#1E2D24\",\n    gray600: \"#334139\",\n    gray500: \"#565656\",\n    gray100: \"#ECEFF1\",\n    white: \"#FFF\",\n    link: \"#0000EE\",\n    focus: \"#228BEC\"\n  },\n  space: [\"0px\", \"0.5rem\", \"1rem\", \"1.5rem\", \"2.5rem\", \"4rem\", \"6.5rem\"],\n  fonts: {\n    body: \"'Open Sans', sans-serif\",\n    display: \"'Montserrat', sans-serif\"\n  },\n  fontSizes: [\n    \"0.75rem\",\n    \"0.875rem\",\n    \"1rem\",\n    \"1.25rem\",\n    \"1.5rem\",\n    \"2rem\",\n    \"3rem\"\n  ],\n  fontWeights: {\n    light: 300,\n    normal: 400,\n    bold: 600\n  },\n  lineHeights: {\n    xs: 1,\n    sm: 1.4,\n    md: 1.5\n  },\n  // px values are for 1rem === 16px:\n  breakpoints: {\n    xs: \"0px\",\n    sm: \"37.5rem\", // tabletPortrait 600px\n    md: \"56.25rem\", // tabletLandscape 900px\n    lg: \"75rem\", // desktop 1200px\n    xl: \"112.5rem\" // wideDesktop 1800px\n  },\n  borderWidths: {\n    none: \"0px\",\n    hair: \"1px\"\n  },\n  radii: {\n    none: \"0px\",\n    xs: \"0.25em\",\n    sm: \"0.5em\",\n    md: \"1em\",\n    circle: \"100%\"\n  },\n  shadows: {\n    none: \"none\",\n    sm: \"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)\",\n    md: \"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)\",\n    lg:\n      \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n    xl:\n      \"0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)\",\n    xxl: \"0 25px 50px -12px rgba(0, 0, 0, 0.25)\"\n  },\n  sizes: {\n    copy: \"66ch\"\n  },\n  timings: {\n    instant: 0,\n    modalAnimation: 250,\n    contentFade: 500,\n    spinner: 1250\n  },\n  zIndices: {\n    header: 100,\n    sidebar: 200,\n    modalDialog: 300\n  },\n  borderStyles: [\"solid dashed\"]\n} as const;\n\nconst theme = {\n  ...baseTheme,\n  buttons: {\n    primary: {\n      color: baseTheme.colors.white,\n      backgroundColor: baseTheme.colors.primary900,\n      borderColor: baseTheme.colors.primary900\n    },\n    outline: {\n      color: baseTheme.colors.black,\n      backgroundColor: \"transparent\",\n      borderColor: baseTheme.colors.gray500\n    },\n    outlineInverted: {\n      color: baseTheme.colors.white,\n      backgroundColor: \"transparent\",\n      borderColor: baseTheme.colors.white\n    }\n  },\n  buttonSizes: {\n    medium: css`\n      padding: 0.5rem 1rem;\n    `,\n    small: css`\n      padding: 0.25rem 0.5rem;\n    `,\n    icon: css`\n      padding: 0 0.25em;\n    `\n  }\n} as const;\n\nexport { theme };\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { IdProvider } from \"react-use-id-hook\";\nimport { Box, SkipLinksProvider } from \"src/shared\";\nimport { Header } from \"src/header\";\nimport { PictureElementPage } from \"src/modules/picture-element\";\nimport { CompositingAnimationPage } from \"src/modules/compositing-animation\";\nimport { RefsExperimentsPage } from \"src/modules/refs-experiments\";\nimport { HomePage } from \"src/modules/home\";\nimport { AriaLivePage } from \"src/modules/aria-live\";\nimport { GlobalStyle } from \"./global-style\";\nimport { theme } from \"./theme\";\n\nconst PAGES = [\n  { component: HomePage, path: \"/\", title: \"Options\" },\n  {\n    component: PictureElementPage,\n    path: \"/picture-element\",\n    title: \"Picture Element\"\n  },\n  {\n    component: CompositingAnimationPage,\n    path: \"/compositing-animation\",\n    title: \"Compositing Animation\"\n  },\n  {\n    component: RefsExperimentsPage,\n    path: \"/refs-experiments\",\n    title: \"Refs Experiments\"\n  },\n  {\n    component: AriaLivePage,\n    path: \"/aria-live\",\n    title: \"Aria Live Experiment\"\n  }\n] as const;\n\nconst App = () => (\n  <IdProvider>\n    <ThemeProvider theme={theme}>\n      <>\n        <GlobalStyle />\n        <SkipLinksProvider>\n          <Box minHeight=\"100vh\" flexDirection=\"column\">\n            <Header pages={PAGES} />\n            <Box as=\"main\" flexGrow={1} flexDirection=\"column\">\n              <Switch>\n                {PAGES.map(({ path, title, component: PageComponent }) => (\n                  <Route key={path} exact path={path}>\n                    <PageComponent title={title} />\n                  </Route>\n                ))}\n              </Switch>\n            </Box>\n          </Box>\n        </SkipLinksProvider>\n      </>\n    </ThemeProvider>\n  </IdProvider>\n);\n\nexport { App };\n","import React from \"react\";\nimport { Page, useScrollToTop } from \"src/shared\";\nimport { AnimationDurationField } from \"./animation-duration-field\";\nimport { AnimationLibraryField } from \"./animation-library-field\";\nimport { PageWeightField } from \"./page-weight-field\";\nimport { ShouldDelayNavigationField } from \"./should-delay-navigation-field\";\n\ntype Props = {\n  title: string;\n};\n\nconst HomePage: React.FC<Props> = ({ title }) => {\n  useScrollToTop();\n\n  return (\n    <Page.Box>\n      <Page.Header title={title} />\n      <ShouldDelayNavigationField />\n      <PageWeightField />\n      <AnimationLibraryField />\n      <AnimationDurationField />\n    </Page.Box>\n  );\n};\n\nexport { HomePage };\n","import React from \"react\";\nimport { useStoreState } from \"pullstate\";\nimport { Box, Page, Stack, useScrollToTop } from \"src/shared\";\nimport { AnimationStore, PageWeight } from \"src/state\";\nimport { HeroImage } from \"./hero-image\";\nimport { createParagraphs } from \"./create-paragraphs\";\n\ntype Props = {\n  title: string;\n};\n\nconst PictureElementPage: React.FC<Props> = ({ title }) => {\n  useScrollToTop();\n\n  const pageWeight = useStoreState(AnimationStore, s => s.pageWeight);\n  const maxParagraphs = pageWeight === PageWeight.Heavy ? 500 : 1;\n\n  return (\n    <>\n      <HeroImage\n        landscapeImagePath={`${process.env.PUBLIC_URL}/images/light/desert-landscape`}\n        portraitImagePath={`${process.env.PUBLIC_URL}/images/light/desert-portrait`}\n        altText=\"Desert landscape\"\n      />\n      <Box m={{ xs: 3, sm: 5 }}>\n        <Stack spacing={{ xs: 2, sm: 3 }}>\n          <Page.Header title={title} />\n          {createParagraphs(maxParagraphs)}\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport { PictureElementPage };\n","import React from \"react\";\nimport global from \"global\";\nimport {\n  blockDOMUpdates,\n  Button,\n  Page,\n  Paragraph,\n  Switcher,\n  useScrollToTop\n} from \"src/shared\";\n\ntype Props = {\n  title: string;\n};\n\nconst CompositingAnimationPage: React.FC<Props> = ({ title }) => {\n  const [isLoading, setIsLoading] = React.useState(false);\n  useScrollToTop();\n\n  const handleClick = () => {\n    setIsLoading(true);\n    global.setTimeout(() => {\n      setIsLoading(false);\n    }, 5000);\n  };\n\n  return (\n    <Page.Box>\n      <Page.Header title={title} />\n      <Paragraph>\n        The first two buttons show a spinner for five seconds when clicked, but\n        each animates the spinner in a different way. The second button will\n        enter a synchronous (blocking) loop for two seconds when clicked.\n      </Paragraph>\n      <Switcher spacing=\"1rem\" threshold=\"copy\">\n        <Button isLoading={isLoading} useCSSAnimation onClick={handleClick}>\n          CSS animation\n        </Button>\n        <Button\n          isLoading={isLoading}\n          useCSSAnimation={false}\n          onClick={handleClick}\n        >\n          rAF animation\n        </Button>\n        <Button useCSSAnimation={false} onClick={() => blockDOMUpdates(2000)}>\n          Freeze site for two seconds\n        </Button>\n      </Switcher>\n    </Page.Box>\n  );\n};\n\nexport { CompositingAnimationPage };\n","const blockDOMUpdates = (milliseconds: number) => {\n  const start = Date.now();\n\n  while (Date.now() - start < milliseconds) {\n    // empty body\n  }\n};\n\nexport { blockDOMUpdates };\n","import React from \"react\";\nimport {\n  Button,\n  Checkbox,\n  Cluster,\n  Page,\n  Paragraph,\n  Stack,\n  useScrollToTop\n} from \"src/shared\";\nimport { ExampleContextProvider } from \"./example-context\";\nimport { ExampleContextConsumer } from \"./example-context-consumer\";\n\ntype Props = {\n  title: string;\n};\n\nconst RefsExperimentsPage: React.FC<Props> = ({ title }) => {\n  useScrollToTop();\n\n  const [counter, setCounter] = React.useState(0);\n  const [useStableContextValue, setUseStableContextValue] = React.useState(\n    false\n  );\n\n  return (\n    <Page.Box>\n      <Page.Header title={title} />\n      <Stack spacing={2}>\n        <Checkbox\n          label=\"Use a stable context value\"\n          name=\"useStableContextValue\"\n          checked={useStableContextValue}\n          onChange={() => setUseStableContextValue(state => !state)}\n        />\n        <Cluster spacing={2}>\n          <Button\n            useCSSAnimation\n            onClick={() => setCounter(counter => counter + 1)}\n          >\n            Click to trigger a re-render\n          </Button>\n        </Cluster>\n        <Paragraph>Click count: {counter}</Paragraph>\n        <ExampleContextProvider useStableContextValue={useStableContextValue}>\n          <ExampleContextConsumer />\n        </ExampleContextProvider>\n      </Stack>\n    </Page.Box>\n  );\n};\n\nexport { RefsExperimentsPage };\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable import/group-exports */\n/* eslint-disable import/exports-last */\n/* eslint-disable no-console */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport document from \"global/document\";\nimport { App } from \"./app\";\nimport * as serviceWorker from \"./service-worker\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}